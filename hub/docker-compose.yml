volumes:
  mysql_data:
    driver: local
  kafka_data:
    driver: local
services:
  mysql:
    image: mysql/mysql-server
    container_name: hub-mysql
    deploy:
      replicas: 1
    # Disable logging as it is far too verbose for debugging locally
    # logging:
    #   driver: none
    ports:
      - "3306:3306"
    volumes:
      # Note: this fixes the permissions issue, but docker-compose up will fail on first attempt
      - ./init/sql/:/docker-entrypoint-initdb.d/
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_USER=${DBUSER:-central_ledger}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-central_ledger}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
  kafka:
    image: bitnami/kafka:3.5
    container_name: hub-kafka
    ports:
      - "9092:9092"
    environment:
      # BITNAMI_DEBUG: "yes"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: hub-kafka
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093,LISTENER_DOCKER://:29092,LISTENER_EXTERN://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_DOCKER://hub-kafka:29092,LISTENER_EXTERN://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERN:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_MESSAGE_MAX_BYTES: 200000000
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ENABLE_KRAFT: "true"
    healthcheck:
      test: ["CMD" ,"/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh","--bootstrap-server","hub-kafka:29092"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    volumes:
      - kafka_data:/bitnami/kafka

  init-kafka:
    container_name: hub-init-kafka
    image: docker.io/bitnami/kafka:3.5
    depends_on:
      - kafka
    volumes:
      - ./init/kafka:/tmp/kafka/scripts
    command: bash /tmp/kafka/scripts/provision.sh

  ## Debug utilities
  redpanda-console:
    container_name: hub-redpanda-console
    image: docker.redpanda.com/redpandadata/console:${DEP_KAfKA_UI_VERSION}
    deploy:
      replicas: 1
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - mojaloop-net
    environment:
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - kafka
    profiles:
      - debug

  mongodb:
    container_name: hub-mongodb
    image: mongo:${DEP_MONGO_VERSION}
    ports:
      - "27017:27017"
    networks:
      - mojaloop-net
    logging:
        driver: none
    healthcheck:
      test: mongosh --eval 'db.runCommand("ping").ok' localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s


##  To be used with proxyCache.type === 'redis'
#  redis:
#    image: redis:6.2.4-alpine
#    restart: "unless-stopped"
#    environment:
#      <<: *REDIS_ENVS
#      REDIS_CLUSTER_CREATOR: yes
#    depends_on:
#      - redis-node-1
#      - redis-node-2
#      - redis-node-3
#      - redis-node-4
#      - redis-node-5
#    ports:
#      - "6379:6379"
